var Configuration = angular.module('ivNet.Configuration', ['ngResource', 'trNgGrid']);

Configuration.factory('customconfiguration', function ($resource) {
    return $resource('/api/listing/configuration/id', null,
    {
        'delete': { method: 'Delete' },
    });
});

Configuration.factory('configuration', function ($resource) {
    return $resource('/api/listing/configuration/:id', null,
    {
        'query': { method: 'GET', isArray: false },
        'save': { method: 'Post' },
    });
});

Configuration.controller('ConfigurationController', function ($scope, $filter, configuration, customconfiguration) {

    $scope.removeTransport = function(item) {
        var transportItemIndex = -1;
        $.each($scope.transportList, function(transportIndex, transportItem) {
            if (transportItem.Id == item.Id) {
                transportItemIndex = transportIndex;
            }
        });

        customconfiguration.delete({ id: item.Id, type: 'transport' },
            function(data) {
                $scope.transportList.splice(transportItemIndex, 1);
            },
            function(error) {
                alert(error.data.Message + ' [' + error.data.MessageDetail + ']');
            });
    };

    $scope.removeTag = function (item) {
        var tagItemIndex = -1;
        $.each($scope.tagList, function (tagIndex, tagItem) {
            if (tagItem.Id == item.Id) {
                tagItemIndex = tagIndex;
            }
        });

        customconfiguration.delete({ id: item.Id, type: 'tag' },
            function (data) {
                $scope.tagList.splice(tagItemIndex, 1);
            },
            function (error) {
                alert(error.data.Message + ' [' + error.data.MessageDetail + ']');
            });
    };

    $scope.removeRoomType = function (item) {
        var roomTypeItemIndex = -1;
        $.each($scope.roomTypes, function (roomTypeIndex, roomTypeItem) {
            if (roomTypeItem.Id == item.Id) {
                roomTypeItemIndex = roomTypeIndex;
            }
        });

        customconfiguration.delete({ id: item.Id, type: 'roomType' },
            function (data) {
                $scope.roomTypes.splice(roomTypeItemIndex, 1);
            },
            function (error) {
                alert(error.data.Message + ' [' + error.data.MessageDetail + ']');
            });
    };

    $scope.removeCategory = function (item) {
        var categoryItemIndex = -1;
        $.each($scope.categories, function (categoryIndex, categoryItem) {
            if (categoryItem.Id == item.Id) {
                categoryItemIndex = categoryIndex;
            }
        });

        customconfiguration.delete({ id: item.Id, type: 'category' },
            function (data) {
                $scope.categories.splice(categoryItemIndex, 1);
            },
            function (error) {
                alert(error.data.Message + ' [' + error.data.MessageDetail + ']');
            });
    };

    $scope.addCategory = function () {
        if ($scope.categoryName.length > 0) {
            var category = { 'Type': 'category', 'Name': $scope.categoryName }

            customconfiguration.save(JSON.stringify(category),
                function(data) {
                    $scope.categories.push({ Id: data.Id, Name: data.Name });
                    $scope.categories = $filter('orderBy')($scope.categories, "Name")
                    $scope.categoryName = "";
                },
                function(error) {
                    alert(error.data.Message + ' [' + error.data.MessageDetail + ']');
                });
        }
    };

    $scope.addTransport = function () {

        if ($scope.transportName.length > 0) {
            var transport = { 'Type': 'transport', 'Name': $scope.transportName }

            customconfiguration.save(JSON.stringify(transport),
                function(data) {
                    $scope.transportList.push({ Id: data.Id, Name: data.Name });
                    $scope.transportList = $filter('orderBy')($scope.transportList, "Name")
                    $scope.transportName = "";
                },
                function(error) {
                    alert(error.data.Message + ' [' + error.data.MessageDetail + ']');
                });
        }
    };

    $scope.addTag = function () {

        if ($scope.tagText.length > 0) {
            var tag = { 'Type': 'tag', 'Name': $scope.tagText }

            customconfiguration.save(JSON.stringify(tag),
                function(data) {
                    $scope.tagList.push({ Id: data.Id, Name: data.Name });
                    $scope.tagList = $filter('orderBy')($scope.tagList, "Name")
                    $scope.tagText = "";
                },
                function(error) {
                    alert(error.data.Message + ' [' + error.data.MessageDetail + ']');
                });
        }
    };

    $scope.addRoomType = function () {

        if ($scope.roomTypeName.length > 0) {
            var roomType = { 'Type': 'roomType', 'Name': $scope.roomTypeName }

            customconfiguration.save(JSON.stringify(roomType),
                function(data) {
                    $scope.roomTypes.push({ Id: data.Id, Name: data.Name });
                    $scope.roomTypes = $filter('orderBy')($scope.roomTypes, "Name")
                    $scope.roomTypeName = "";
                },
                function(error) {
                    alert(error.data.Message + ' [' + error.data.MessageDetail + ']');
                });
        }
    };

    init();

    function init() {

        configuration.query({},
            function(data) {
                $scope.categories = data.Categories;
                $scope.transportList = data.TransportList;
                $scope.roomTypes = data.RoomTypes;
                $scope.tagList = data.TagTextList;
            },
            function(error) {
                alert(error.data.Message + ' [' + error.data.MessageDetail + ']');
            });
    }

});